ylab('Recovery of variable net effect') +
ylim(-2.5,2.5)
BEresilience %>%
select(BE, time, sim, agb, ba, n, gpp) %>%
melt(id.vars = c('BE', 'time', 'sim')) %>%
left_join(., doe, by = 'sim') %>%
filter(richness == 125) %>%
filter(BE %in% c('SE', 'CE')) %>%
group_by(time, BE, variable) %>%
summarise(qt1 =quantile(value, probs=0.05, na.rm = T),
qt2 =quantile(value, probs=0.75, na.rm = T),
mean=mean(value, na.rm = T)) %>%
ggplot(aes(x = time)) +
geom_hline(yintercept = 1, color = 'red') +
geom_hline(yintercept = 0, color = 'blue') +
geom_ribbon(aes(ymin = qt1, ymax = qt2, fill = BE), alpha = 0.3) +
geom_line(aes(y = mean, color = BE)) +
facet_wrap(~ variable, scales = "free", labeller = 'label_both') +
xlab('Time (years)') +
ylab('Recovery of variable net effect') +
ylim(-2.5,2.5)
BEresilience %>%
select(BE, time, sim, agb, ba, n, gpp) %>%
melt(id.vars = c('BE', 'time', 'sim')) %>%
left_join(., doe, by = 'sim') %>%
filter(BE %in% c('SE', 'CE')) %>%
group_by(time, BE, variable) %>%
summarise(qt1 =quantile(value, probs=0.05, na.rm = T),
qt2 =quantile(value, probs=0.75, na.rm = T),
mean=mean(value, na.rm = T)) %>%
ggplot(aes(x = time)) +
geom_hline(yintercept = 1, color = 'red') +
geom_hline(yintercept = 0, color = 'blue') +
geom_ribbon(aes(ymin = qt1, ymax = qt2, fill = BE), alpha = 0.3) +
geom_line(aes(y = mean, color = BE)) +
facet_wrap(~ variable, scales = "free", labeller = 'label_both') +
xlab('Time (years)') +
ylab('Recovery of variable net effect') +
ylim(-2.5,2.5)
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
select(Ieq.structure, ba, richness, FRic, FEve, FDiv, FDis) %>%
melt(id.vars = c('Ieq.structure', 'ba', 'richness')) %>%
ggplot(aes(x = Ieq.structure/ba, y = value)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness)) +
facet_wrap(~variable, scales = "free", labeller = 'label_both') +
ylab('Functional diversity') +
xlab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)')
rm(list = ls()) ; invisible(gc())
library(knitr)
library(dplyr)
library(TROLL)
library(reshape2)
library(ggplot2)
opts_chunk$set(
echo = F, message = F, warning = F, fig.height = 8, fig.width = 12,
cache = T, cache.lazy = F)
path <- '~/Documents/ECOFOG/Results/disturbance/sylviculture/data/'
# harvest <- data.frame(
#   species = c('Brosimum_guianense', 'Brosimum_rubescens', 'Caryocar_glabrum',
#               'Dicorynia_guianensis', 'Goupia_glabra', 'Manilkara_bidentata',
#               'Manilkara_huberi', 'Ocotea_argyrophylla', 'Qualea_rosea',
#               'Ruizterania_albiflora', 'Vouacapoua_americana',
#               'Couma_guianensis', 'Eperua_grandiflora', 'Lecythis_zabucajo',
#               'Moronobea_coccinea', 'Rhodostemonodaphne_grandis',
#               'Sterculia_pruriens', 'Sterculia_speciosa',
#               'Sterculia_villifera', 'Virola_michelii',
#               'Vochysia_guianensis', 'Bocoa_prouacensis',
#               'Couratari_multiflora', 'Eperua_falcata',
#               'Eperua_rubiginosa'),
#   dbh_min = 0.55,
#   dbh_max = 2,
#   interest = c(rep(1,11), rep(2,10), rep(3,4))
# )
# row.names(harvest) <- harvest$species
# harvest['Vouacapoua_americana','dbh_max'] <- 0.70
# mature <- loadStack('~/Documents/ECOFOG/Results/disturbance/maturity/models/')
# save(mature, file = '~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# load('~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# data <- data.frame(species = c('Total'))
# for(layer in mature@layers){
#   cat(layer@name, '\n')
#   data_l <- layer@final_pattern@data
#   data_l$species <- row.names(layer@sp_par)[data_l$sp_lab]
#   data_l <- data_l %>%
#     left_join(harvest, by = 'species') %>%
#     filter(!is.na(dbh_min)) %>%
#     filter(dbh >= dbh_min) %>%
#     filter(dbh <= dbh_max) %>%
#     mutate(volume = -0.0358 + 8.7634*dbh^2) %>%
#     group_by(species) %>%
#     summarise_each(funs(sum)) %>%
#     select(species, volume)
#   names(data_l)[2] <- layer@name
#   data <- full_join(data, data_l, by = 'species')
# }
# row.names(data) <- data$species
# data <- data[-1]
# data[is.na(data)] <- 0
# data['Total',] <- colSums(data)
# data <- t(data)
# save(data, file = '~/Documents/ECOFOG/Results/disturbance/maturity/matureSylv.Rdata')
# load('~/Documents/ECOFOG/Results/disturbance/maturity/matureSylv.Rdata')
# data <- data.frame(data)
# data <- data[-which(data$Total == 0),]
# names(data) <- gsub('_', '\n', names(data))
# data <- round(data/16, 3)
# DT::datatable(data,
#               options = list(pageLength = 47, order = c(1, 'desc')),
#               caption = 'Harvestable volume (m3/ha)')
# rm(data, harvest)
# sim <- row.names(data)
# # Outputs
# path <- '~/Documents/ECOFOG/Results/disturbance/sylviculture'
# dir.create(file.path(path))
# invisible(sapply(sim, function(s) dir.create(file.path(path, s))))
# # Inits
# invisible(sapply(sim, function(s){
#   file.copy(from = file.path(
#     '~/Documents/ECOFOG/Results/disturbance/maturity/',
#     'parameters', paste0(s, '.txt')),
#     to  = file.path(path, paste0('init_', s, '.txt')))}))
# # Forests
# load('~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# invisible(lapply(sim, function(s){
#   layer <- mature@layers[[s]]
#   cat(layer@name, '\n')
#   inventoryFromOutput(layer, paste0('forest_', layer@name, '.txt'), path)
# }))
# # Sylviculture
# invisible(lapply(sim, function(s){
#   layer <- mature@layers[[s]]
#   cat(layer@name, '\n')
#   sylvicultureInit(layer@sp_par,
#                    paste0('sylviculture_', layer@name, '.txt'),
#                    path)
# }))
# # Bash
# cores <- 20
# if('sylviculture.sh' %in% list.files(file.path(path)))
#    unlink(file.path(path, 'sylviculture.sh'))
# bash <- file(file.path(path, 'sylviculture.sh'), open = 'a')
# cat(' #!/bin/bash  \n\n', file = bash, append = TRUE)
# cat(' echo "sylviculture forest parrallel modelling in TROLL" \n\n', file = bash, append = TRUE)
# for(i in seq_len(length(sim))){
#   command <- paste0('./troll',
#                     ' -i"init_', sim[i], '.txt"',
#                     ' -f"forest_', sim[i], '.txt"',
#                     ' -s"sylviculture_', sim[i], '.txt"',
#                     ' -o./', sim[i], '/', sim[i], ' &\n')
#   cat(command, file = bash, append = TRUE)
#   if(i %/% cores == i/cores)
#   cat('wait\n', file = bash, append = TRUE)
# }
# cat('wait\n', file = bash, append = TRUE)
# cat(' echo "TROLL all jobs done"  \n\n', file = bash, append = TRUE)
# close(bash)
# # Load stack
# sylviculture <- loadStack('~/Documents/ECOFOG/Results/disturbance/sylviculture/models/')
# save(sylviculture, file = file.path(path, 'sylviculture.Rdata'))
# load('~/Documents/ECOFOG/Results/disturbance/sylviculture/sylviculture.Rdata')
# tracks <- lapply(sylviculture@layers, function(layer)
#                  layer@disturbance %>%
#     ggplot(aes(col, row, color = type, size = dbh)) +
#     geom_point() + xlim(0,400) + ylim(0,400))
# save(doe, file = '~/Documents/ECOFOG/Results/disturbance/disturbance/disturbanceDOE.Rdata')
# save(tracks, file = file.path(path, 'tracks.Rdata'))
# ba <- data.frame(unlist(lapply(sylviculture@layers, function(layer)
#   sum(pi*layer@disturbance$dbh^2/4))))
# names(ba) <- 'ba'
# ba$sim <- row.names(ba)
# load(file.path('~/Documents/ECOFOG/Results/disturbance/disturbance/data/disturbanceDOE.Rdata'))
# doe <- doe %>%
#   select(-sim, -disturbance) %>%
#   mutate(sim = paste0(richness, '.', cvh))
# doe <- left_join(ba, doe) %>%
#   distinct()
# rm(ba)
# save(doe, file = file.path(path, 'DOE.Rdata'))
load(file.path(path, 'DOE.Rdata'))
# load('~/Documents/ECOFOG/Results/disturbance/sylviculture/sylviculture.Rdata')
# ecosystemS <- extractData(sylviculture)
# load(file.path('~/Documents/ECOFOG/Results/disturbance/disturbance/data/disturbanceData.Rdata'))
# ecosystem <- ecosystem %>%
#   filter(sim %in% paste0(unique(ecosystemS$sim), '.', 0)) %>%
#   bind_rows(ecosystemS, .)
# rm(ecosystemS)
# save(ecosystem, file = file.path(path, 'ecosystem.Rdata'))
load(file.path(path, 'ecosystem.Rdata'))
# sim <- unique(doe$sim)
# time <- unique(ecosystem$time)
# resilience <- sapply(sim, function(s){
#   data_s <- ecosystem[which(ecosystem$sim %in% c(s, paste0(s, '.0'))),]
#   data_s <- sapply(time, function(t){
#     data_t <- subset(data_s, time == t)
#     T0 <- which(data_t$sim == paste0(s, '.0'))
#     data_t[-c(1:2)] <- apply(data_t[-c(1:2)], 2, function(x) x/x[T0])
#     return(data_t[-T0,])
#   }, simplify = F)
#   data_s <- do.call('rbind', data_s)
# }, simplify = F) ; rm(sim, time)
# resilience <- do.call('rbind', resilience)
# save(resilience, file = file.path(path, 'resilience.Rdata'))
load(file.path(path, 'resilience.Rdata'))
deq <- data.frame(
time = resilience$time,
sim = resilience$sim,
structure = apply(resilience[c('agb', 'ba', 'n', 'n10', 'n30')], 1,
function(x) sqrt(sum((rep(1, length(x)) - x)^2))),
production = apply(resilience[c('gpp', 'npp', 'Rday', 'Rnight')], 1,
function(x) sqrt(sum((rep(1, length(x)) - x)^2)))
)
sim <- unique(resilience$sim)
Ieq <- sapply(sim, function(s){
data_s <- subset(deq, sim ==s)
return(cbind(data_s[c(1,2)], cumsum(data_s[-c(1,2)])))
}, simplify = F) ; rm(sim)
Ieq <- data.frame(do.call('rbind', Ieq))
names(Ieq)[3:4] <- paste0('Ieq.', names(Ieq)[3:4])
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness, color = FEve)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)') +
scale_color_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness, color = ba)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)') +
scale_color_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness, color = ba/16)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)') +
scale_color_continuous('Basla\narea\ndisturbed\n(m2/ha)')
devtools::load_all(".")
commit('sylviculture2', push = T)
rm(list = ls()) ; invisible(gc())
library(knitr)
library(dplyr)
library(TROLL)
library(reshape2)
library(ggplot2)
opts_chunk$set(
echo = F, message = F, warning = F, fig.height = 8, fig.width = 12,
cache = T, cache.lazy = F)
path <- '~/Documents/ECOFOG/Results/disturbance/sylviculture/data/'
# harvest <- data.frame(
#   species = c('Brosimum_guianense', 'Brosimum_rubescens', 'Caryocar_glabrum',
#               'Dicorynia_guianensis', 'Goupia_glabra', 'Manilkara_bidentata',
#               'Manilkara_huberi', 'Ocotea_argyrophylla', 'Qualea_rosea',
#               'Ruizterania_albiflora', 'Vouacapoua_americana',
#               'Couma_guianensis', 'Eperua_grandiflora', 'Lecythis_zabucajo',
#               'Moronobea_coccinea', 'Rhodostemonodaphne_grandis',
#               'Sterculia_pruriens', 'Sterculia_speciosa',
#               'Sterculia_villifera', 'Virola_michelii',
#               'Vochysia_guianensis', 'Bocoa_prouacensis',
#               'Couratari_multiflora', 'Eperua_falcata',
#               'Eperua_rubiginosa'),
#   dbh_min = 0.55,
#   dbh_max = 2,
#   interest = c(rep(1,11), rep(2,10), rep(3,4))
# )
# row.names(harvest) <- harvest$species
# harvest['Vouacapoua_americana','dbh_max'] <- 0.70
# mature <- loadStack('~/Documents/ECOFOG/Results/disturbance/maturity/models/')
# save(mature, file = '~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# load('~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# data <- data.frame(species = c('Total'))
# for(layer in mature@layers){
#   cat(layer@name, '\n')
#   data_l <- layer@final_pattern@data
#   data_l$species <- row.names(layer@sp_par)[data_l$sp_lab]
#   data_l <- data_l %>%
#     left_join(harvest, by = 'species') %>%
#     filter(!is.na(dbh_min)) %>%
#     filter(dbh >= dbh_min) %>%
#     filter(dbh <= dbh_max) %>%
#     mutate(volume = -0.0358 + 8.7634*dbh^2) %>%
#     group_by(species) %>%
#     summarise_each(funs(sum)) %>%
#     select(species, volume)
#   names(data_l)[2] <- layer@name
#   data <- full_join(data, data_l, by = 'species')
# }
# row.names(data) <- data$species
# data <- data[-1]
# data[is.na(data)] <- 0
# data['Total',] <- colSums(data)
# data <- t(data)
# save(data, file = '~/Documents/ECOFOG/Results/disturbance/maturity/matureSylv.Rdata')
# load('~/Documents/ECOFOG/Results/disturbance/maturity/matureSylv.Rdata')
# data <- data.frame(data)
# data <- data[-which(data$Total == 0),]
# names(data) <- gsub('_', '\n', names(data))
# data <- round(data/16, 3)
# DT::datatable(data,
#               options = list(pageLength = 47, order = c(1, 'desc')),
#               caption = 'Harvestable volume (m3/ha)')
# rm(data, harvest)
# sim <- row.names(data)
# # Outputs
# path <- '~/Documents/ECOFOG/Results/disturbance/sylviculture'
# dir.create(file.path(path))
# invisible(sapply(sim, function(s) dir.create(file.path(path, s))))
# # Inits
# invisible(sapply(sim, function(s){
#   file.copy(from = file.path(
#     '~/Documents/ECOFOG/Results/disturbance/maturity/',
#     'parameters', paste0(s, '.txt')),
#     to  = file.path(path, paste0('init_', s, '.txt')))}))
# # Forests
# load('~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')
# invisible(lapply(sim, function(s){
#   layer <- mature@layers[[s]]
#   cat(layer@name, '\n')
#   inventoryFromOutput(layer, paste0('forest_', layer@name, '.txt'), path)
# }))
# # Sylviculture
# invisible(lapply(sim, function(s){
#   layer <- mature@layers[[s]]
#   cat(layer@name, '\n')
#   sylvicultureInit(layer@sp_par,
#                    paste0('sylviculture_', layer@name, '.txt'),
#                    path)
# }))
# # Bash
# cores <- 20
# if('sylviculture.sh' %in% list.files(file.path(path)))
#    unlink(file.path(path, 'sylviculture.sh'))
# bash <- file(file.path(path, 'sylviculture.sh'), open = 'a')
# cat(' #!/bin/bash  \n\n', file = bash, append = TRUE)
# cat(' echo "sylviculture forest parrallel modelling in TROLL" \n\n', file = bash, append = TRUE)
# for(i in seq_len(length(sim))){
#   command <- paste0('./troll',
#                     ' -i"init_', sim[i], '.txt"',
#                     ' -f"forest_', sim[i], '.txt"',
#                     ' -s"sylviculture_', sim[i], '.txt"',
#                     ' -o./', sim[i], '/', sim[i], ' &\n')
#   cat(command, file = bash, append = TRUE)
#   if(i %/% cores == i/cores)
#   cat('wait\n', file = bash, append = TRUE)
# }
# cat('wait\n', file = bash, append = TRUE)
# cat(' echo "TROLL all jobs done"  \n\n', file = bash, append = TRUE)
# close(bash)
# # Load stack
# sylviculture <- loadStack('~/Documents/ECOFOG/Results/disturbance/sylviculture/models/')
# save(sylviculture, file = file.path(path, 'sylviculture.Rdata'))
# load('~/Documents/ECOFOG/Results/disturbance/sylviculture/sylviculture.Rdata')
# tracks <- lapply(sylviculture@layers, function(layer)
#                  layer@disturbance %>%
#     ggplot(aes(col, row, color = type, size = dbh)) +
#     geom_point() + xlim(0,400) + ylim(0,400))
# save(doe, file = '~/Documents/ECOFOG/Results/disturbance/disturbance/disturbanceDOE.Rdata')
# save(tracks, file = file.path(path, 'tracks.Rdata'))
# ba <- data.frame(unlist(lapply(sylviculture@layers, function(layer)
#   sum(pi*layer@disturbance$dbh^2/4))))
# names(ba) <- 'ba'
# ba$sim <- row.names(ba)
# load(file.path('~/Documents/ECOFOG/Results/disturbance/disturbance/data/disturbanceDOE.Rdata'))
# doe <- doe %>%
#   select(-sim, -disturbance) %>%
#   mutate(sim = paste0(richness, '.', cvh))
# doe <- left_join(ba, doe) %>%
#   distinct()
# rm(ba)
# save(doe, file = file.path(path, 'DOE.Rdata'))
load(file.path(path, 'DOE.Rdata'))
# load('~/Documents/ECOFOG/Results/disturbance/sylviculture/sylviculture.Rdata')
# ecosystemS <- extractData(sylviculture)
# load(file.path('~/Documents/ECOFOG/Results/disturbance/disturbance/data/disturbanceData.Rdata'))
# ecosystem <- ecosystem %>%
#   filter(sim %in% paste0(unique(ecosystemS$sim), '.', 0)) %>%
#   bind_rows(ecosystemS, .)
# rm(ecosystemS)
# save(ecosystem, file = file.path(path, 'ecosystem.Rdata'))
load(file.path(path, 'ecosystem.Rdata'))
# sim <- unique(doe$sim)
# time <- unique(ecosystem$time)
# resilience <- sapply(sim, function(s){
#   data_s <- ecosystem[which(ecosystem$sim %in% c(s, paste0(s, '.0'))),]
#   data_s <- sapply(time, function(t){
#     data_t <- subset(data_s, time == t)
#     T0 <- which(data_t$sim == paste0(s, '.0'))
#     data_t[-c(1:2)] <- apply(data_t[-c(1:2)], 2, function(x) x/x[T0])
#     return(data_t[-T0,])
#   }, simplify = F)
#   data_s <- do.call('rbind', data_s)
# }, simplify = F) ; rm(sim, time)
# resilience <- do.call('rbind', resilience)
# save(resilience, file = file.path(path, 'resilience.Rdata'))
load(file.path(path, 'resilience.Rdata'))
deq <- data.frame(
time = resilience$time,
sim = resilience$sim,
structure = apply(resilience[c('agb', 'ba', 'n', 'n10', 'n30')], 1,
function(x) sqrt(sum((rep(1, length(x)) - x)^2))),
production = apply(resilience[c('gpp', 'npp', 'Rday', 'Rnight')], 1,
function(x) sqrt(sum((rep(1, length(x)) - x)^2)))
)
sim <- unique(resilience$sim)
Ieq <- sapply(sim, function(s){
data_s <- subset(deq, sim ==s)
return(cbind(data_s[c(1,2)], cumsum(data_s[-c(1,2)])))
}, simplify = F) ; rm(sim)
Ieq <- data.frame(do.call('rbind', Ieq))
names(Ieq)[3:4] <- paste0('Ieq.', names(Ieq)[3:4])
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness, color = ba/16)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)') +
scale_color_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(shape = richness, size = ba/16)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_shape_discrete('Species\nrichness\n(SR)') +
scale_size_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(color = richness, size = ba/16)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_color_discrete('Species\nrichness\n(SR)') +
scale_size_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
ggplot(aes(x = FRic, y = Ieq.structure/ba, label = sim)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(color = richness, size = ba/16)) +
xlab('Functional richness (FRic)') +
ylab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_color_discrete('Species\nrichness\n(SR)') +
scale_size_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
select(Ieq.structure, ba, richness, FRic, FEve, FDiv, FDis) %>%
melt(id.vars = c('Ieq.structure', 'ba', 'richness')) %>%
ggplot(aes(x = Ieq.structure/ba, y = value)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(color = richness, size = ba/16)) +
facet_wrap(~variable, scales = "free", labeller = 'label_both') +
ylab('Functional diversity') +
xlab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_color_discrete('Species\nrichness\n(SR)') +
scale_size_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
select(Ieq.production, ba, richness, FRic, FEve, FDiv, FDis) %>%
melt(id.vars = c('Ieq.production', 'ba', 'richness')) %>%
ggplot(aes(x = Ieq.production/ba, y = value)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(color = richness, size = ba/16)) +
facet_wrap(~variable, scales = "free", labeller = 'label_both') +
ylab('Functional diversity') +
xlab('Cummulative integral from ecosystem
distance to forest dynamic equilibrium after 600 years') +
scale_color_discrete('Species\nrichness\n(SR)') +
scale_size_continuous('Basla\narea\ndisturbed\n(m2/ha)')
Ieq %>%
left_join(., doe, by = 'sim') %>%
filter(time == 600) %>%
select(Ieq.structure, ba, richness, FRic, FEve, FDiv, FDis) %>%
melt(id.vars = c('Ieq.structure', 'ba', 'richness')) %>%
ggplot(aes(x = Ieq.structure/ba, y = value)) +
geom_smooth(method = 'lm', alpha = 0.3, colour= 'grey') +
geom_point(aes(color = richness, size = ba/16)) +
facet_wrap(variable~, scales = "free", labeller = 'label_both') +
devtools::load_all(".")
commit('sylviculture2 v2', push = T)
