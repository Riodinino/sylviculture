"0","# rm(data, harvest)"
"0","# sim <- row.names(data)"
"0","# # Outputs"
"0","# path <- '~/Documents/ECOFOG/Results/disturbance/sylviculture'"
"0","# dir.create(file.path(path))"
"0","# invisible(sapply(sim, function(s) dir.create(file.path(path, s))))"
"0","# # Inits"
"0","# invisible(sapply(sim, function(s){"
"0","#   file.copy(from = file.path("
"0","#     '~/Documents/ECOFOG/Results/disturbance/maturity/', "
"0","#     'parameters', paste0(s, '.txt')),"
"0","#     to  = file.path(path, paste0('init_', s, '.txt')))}))"
"0","# # Forests"
"0","# load('~/Documents/ECOFOG/Results/disturbance/maturity/mature.Rdata')"
"0","# invisible(lapply(sim, function(s){"
"0","#   layer <- mature@layers[[s]]"
"0","#   cat(layer@name, '\n')"
"0","#   inventoryFromOutput(layer, paste0('forest_', layer@name, '.txt'), path)"
"0","# }))"
"0","# # Sylviculture"
"0","# invisible(lapply(sim, function(s){"
"0","#   layer <- mature@layers[[s]]"
"0","#   cat(layer@name, '\n')"
"0","#   sylvicultureInit(layer@sp_par, "
"0","#                    paste0('sylviculture_', layer@name, '.txt'), "
"0","#                    path)"
"0","# }))"
"0","# # Bash"
"0","# cores <- 20"
"0","# if('sylviculture.sh' %in% list.files(file.path(path)))"
"0","#    unlink(file.path(path, 'sylviculture.sh'))"
"0","# bash <- file(file.path(path, 'sylviculture.sh'), open = 'a')"
"0","# cat(' #!/bin/bash  \n\n', file = bash, append = TRUE)"
"0","# cat(' echo ""sylviculture forest parrallel modelling in TROLL"" \n\n', file = bash, append = TRUE)"
"0","# for(i in seq_len(length(sim))){"
"0","#   command <- paste0('./troll',"
"0","#                     ' -i""init_', sim[i], '.txt""',"
"0","#                     ' -f""forest_', sim[i], '.txt""',"
"0","#                     ' -s""sylviculture_', sim[i], '.txt""',"
"0","#                     ' -o./', sim[i], '/', sim[i], ' &\n')"
"0","#   cat(command, file = bash, append = TRUE)"
"0","#   if(i %/% cores == i/cores)"
"0","#   cat('wait\n', file = bash, append = TRUE)"
"0","# }"
"0","# cat('wait\n', file = bash, append = TRUE)"
"0","# cat(' echo ""TROLL all jobs done""  \n\n', file = bash, append = TRUE)"
"0","# close(bash)"
